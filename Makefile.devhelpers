DATABASE_URL := postgresql://postgres:postgres@127.0.0.1:5432/postgres
FLASK_APP := dashdotdb
DASHDOTDB_DATABASE_CONTAINER_NAME ?= dashdot-postgres
DASHDOTDB_FLASK_PORT ?= 8080

.PHONY: venv-init
venv-init:
	uv sync --group check

.PHONY: run-service
run-service:
	FLASK_APP=$(FLASK_APP) DASHDOTDB_DATABASE_URL=$(DATABASE_URL) \
	uv run          \
		--isolated    \
		--quiet       \
		--group check \
		flask run     \
			--debugger  \
			--port $(DASHDOTDB_FLASK_PORT)

db-down:
	$(CONTAINER_ENGINE) rm -f $(DASHDOTDB_DATABASE_CONTAINER_NAME)

db-up:
	@$(CONTAINER_ENGINE) run                      \
		-d                                          \
		--name $(DASHDOTDB_DATABASE_CONTAINER_NAME) \
		--rm                                        \
		-it                                         \
		-p 5432:5432                                \
		-e POSTGRES_PASSWORD=postgres               \
			postgres &&                               \
			sleep 2

db-capture:
	@FLASK_APP=$(FLASK_APP) DASHDOTDB_DATABASE_URL=$(DATABASE_URL) \
	uv run          \
		--quiet       \
		--isolated    \
		--group check \
		flask db migrate

db-init:
	FLASK_APP=$(FLASK_APP) DASHDOTDB_DATABASE_URL=$(DATABASE_URL) \
	uv run           \
		--quiet        \
		--isolated     \
		--group check  \
		flask db upgrade

db-status:
	@$(CONTAINER_ENGINE) inspect \
		--format "$(DASHDOTDB_DATABASE_CONTAINER_NAME): {{.State.Status}}" \
		$(DASHDOTDB_DATABASE_CONTAINER_NAME) 2>/dev/null || echo "$(DASHDOTDB_DATABASE_CONTAINER_NAME): not-running"

db: db-down db-up db-init db-capture db-init

.PHONY: db db-down db-up db-init db-capture db-init db-status
.PHONY: dddb-query-imv dddb-query-dv dddb-metrics

dddb-query-imv:
	curl "localhost:$(DASHDOTDB_FLASK_PORT)/api/v1/imagemanifestvuln?cluster=app-sre-prod-01&namespace=cso"

dddb-query-dv:
	curl "localhost:$(DASHDOTDB_FLASK_PORT)/api/v1/deploymentvalidation?cluster=app-sre-prod-01&namespace=app-interface-stage"

dddb-metrics:
	@for metricsrc in imagemanifestvuln deploymentvalidation serviceslometrics; do \
		curl "localhost:$(DASHDOTDB_FLASK_PORT)/api/v1/$${metricsrc}/metrics" ;\
	done
