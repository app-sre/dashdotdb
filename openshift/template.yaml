---
apiVersion: v1
kind: Template
metadata:
  name: dashdotdb
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: dashdotdb
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: dashdotdb
    name: nginx-postsize
  data:
    nginx-postsize.conf: |
      client_max_body_size 20m;
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: dashdotdb
    name: nginx-dynamic-conf
  data:
    nginx.conf: |
      daemon off;
      worker_processes 1;
      error_log /dev/stderr;
      pid /tmp/nginx.pid;
  
      events {
          worker_connections 1024;
      }
  
      http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        upstream app {
          server ${FORWARD_HOST};
          keepalive 64;
        }
  
        server {
          listen *:${LISTEN_PORT};
          server_name _;
          access_log  /dev/stdout  main;
          error_log /dev/stderr;
          auth_basic "Restricted Area";
          auth_basic_user_file /tmp/auth.htpasswd;
  
          include /etc/nginx/conf.d/*.conf;
  
          location / {
            proxy_pass http://app;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
            send_timeout 300;
          }

          location /healthz {
            access_log off;
            auth_basic "off";
            allow all;
            default_type text/plain;
            return 200 "healthy\n";
          }
        }
      }
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: dashdotdb
    name: dashdotdb
  spec:
    replicas: 3
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
        app: dashdotdb
    template:
      metadata:
        labels:
          app: dashdotdb
      spec:
        serviceAccountName: dashdotdb
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - dashdotdb
                topologyKey: "kubernetes.io/hostname"
        containers:
        - image: ${IMAGE_GATE}:${IMAGE_GATE_TAG}
          imagePullPolicy: Always
          name: auth-proxy
          env:
          - name: FORWARD_HOST
            value: "0.0.0.0:8080"
          - name: LISTEN_PORT
            value: "8000"
          - name: BASIC_AUTH_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: ${authProxySecret}
          - name: BASIC_AUTH_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: ${authProxySecret}
          resources:
            requests:
              memory: 200Mi
              cpu: 500m
            limits:
              memory: 300Mi
              cpu: 800m
          ports:
          - name: auth-proxy
            containerPort: 8000
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            httpGet:
              path: /healthz
              port: auth-proxy
              scheme: HTTP
            timeoutSeconds: 1
            initialDelaySeconds: 10
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            httpGet:
              path: /healthz
              port: auth-proxy
              scheme: HTTP
            timeoutSeconds: 1
            initialDelaySeconds: 10
          volumeMounts:
          - mountPath: /etc/nginx/conf.d
            name: nginx-postsize
          - mountPath: /nginx.conf
            name: nginx-dynamic-conf
            subPath: nginx.conf
        - image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: dashdotdb
          resources:
            requests:
              memory: 200Mi
              cpu: 500m
            limits:
              memory: 300Mi
              cpu: 800m
          env:
            - name: DATABASE_HOST
              valueFrom:
                 secretKeyRef:
                   name: ${databaseSecret}
                   key: db.host
            - name: DATABASE_PORT
              valueFrom:
                 secretKeyRef:
                   name: ${databaseSecret}
                   key: db.port
            - name: DATABASE_USERNAME
              valueFrom:
                 secretKeyRef:
                   name: ${databaseSecret}
                   key: db.user
            - name: DATABASE_PASSWORD
              valueFrom:
                 secretKeyRef:
                   name: ${databaseSecret}
                   key: db.password
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: ${databaseSecret}
                  key: db.name
          ports:
          - name: dashdotdb
            containerPort: 8080
          livenessProbe:
            httpGet:
              path: /api/healthz/live
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /api/healthz/ready
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
        volumes:
        - configMap:
            defaultMode: 420
            name: nginx-postsize
          name: nginx-postsize
        - configMap:
            defaultMode: 420
            items:
            - key: nginx.conf
              path: nginx.conf
            name: nginx-dynamic-conf
          name: nginx-dynamic-conf
- apiVersion: v1
  kind: Service
  metadata:
    name: dashdotdb
    labels:
      app: dashdotdb
  spec:
    ports:
      - protocol: TCP
        port: 80
        targetPort: 8000
        name: auth-proxy
    selector:
      app: dashdotdb
- apiVersion: v1
  kind: Service
  metadata:
    name: internal
    labels:
      app: dashdotdb
  spec:
    ports:
      - protocol: TCP
        port: 80
        targetPort: 8080
        name: dashdotdb
    selector:
      app: dashdotdb
parameters:
- name: IMAGE
  value: quay.io/app-sre/dashdotdb
- name: IMAGE_TAG
  value: latest
- name: databaseSecret
  value: dashdotdb-rds
- name: authProxySecret
  value: auth-proxy
- name: IMAGE_GATE
  value: quay.io/app-sre/nginx-gate
- name: IMAGE_GATE_TAG
  value: latest
